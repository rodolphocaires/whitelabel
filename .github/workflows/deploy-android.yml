name: Deploy Android Apps

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'lib/**'
      - 'assets/**'
      - 'android/**'
      - 'pubspec.yaml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      brand_id:
        description: 'Brand to deploy (brand_a, brand_b, or all)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - brand_a
          - brand_b
      build_mode:
        description: 'Build mode'
        required: true
        default: 'release'
        type: choice
        options:
          - debug
          - release

jobs:
  deploy-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        brand_id: ${{ github.event.inputs.brand_id == 'all' && fromJson('["brand_a", "brand_b"]') || fromJson(format('["{0}"]', github.event.inputs.brand_id || 'brand_a')) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: fastlane

    - name: Install dependencies
      run: |
        flutter pub get
        dart run build_runner build --delete-conflicting-outputs

    - name: Setup Android signing
      env:
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        # Create keystore from base64
        echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks
        
        # Create key.properties file
        cat > android/key.properties << EOF
        storePassword=$ANDROID_KEYSTORE_PASSWORD
        keyPassword=$ANDROID_KEY_PASSWORD
        keyAlias=$ANDROID_KEY_ALIAS
        storeFile=keystore.jks
        EOF

    - name: Deploy Android - ${{ matrix.brand_id }}
      env:
        GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
      run: |
        # Create service account JSON file
        echo "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" > fastlane/service_account.json
        
        cd fastlane
        bundle exec fastlane android build_and_deploy brand_id:${{ matrix.brand_id }} build_mode:${{ github.event.inputs.build_mode || 'release' }}

    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-build-${{ matrix.brand_id }}
        path: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/bundle/release/*.aab
        retention-days: 30

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Android deployment successful for brand: ${{ matrix.brand_id }}"
        else
          echo "❌ Android deployment failed for brand: ${{ matrix.brand_id }}"
        fi
