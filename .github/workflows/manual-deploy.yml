name: Manual Brand Deployment

on:
  workflow_dispatch:
    inputs:
      brand_id:
        description: 'Brand to deploy'
        required: true
        type: choice
        options:
          - default
          - brand_a
          - brand_b
      platform:
        description: 'Platform to deploy'
        required: true
        type: choice
        options:
          - ios
          - android
          - both
      build_mode:
        description: 'Build mode'
        required: true
        default: 'release'
        type: choice
        options:
          - debug
          - release

jobs:
  deploy-ios:
    if: ${{ github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'both' }}
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: fastlane

    - name: Install dependencies
      run: |
        flutter pub get
        dart run build_runner build --delete-conflicting-outputs

    - name: Deploy iOS
      env:
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      run: |
        cd fastlane
        bundle exec fastlane ios deploy_brand brand_id:${{ github.event.inputs.brand_id }}

    - name: Upload iOS build
      uses: actions/upload-artifact@v4
      with:
        name: ios-${{ github.event.inputs.brand_id }}-${{ github.event.inputs.build_mode }}
        path: build/ios/iphoneos/
        retention-days: 30

  deploy-android:
    if: ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: fastlane

    - name: Install dependencies
      run: |
        flutter pub get
        dart run build_runner build --delete-conflicting-outputs

    - name: Deploy Android
      env:
        GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        # Setup Android signing
        echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks
        cat > android/key.properties << EOF
        storePassword=$ANDROID_KEYSTORE_PASSWORD
        keyPassword=$ANDROID_KEY_PASSWORD
        keyAlias=$ANDROID_KEY_ALIAS
        storeFile=keystore.jks
        EOF
        
        # Setup service account
        echo "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" > fastlane/service_account.json
        
        cd fastlane
        bundle exec fastlane android deploy_brand brand_id:${{ github.event.inputs.brand_id }}

    - name: Upload Android build
      uses: actions/upload-artifact@v4
      with:
        name: android-${{ github.event.inputs.brand_id }}-${{ github.event.inputs.build_mode }}
        path: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/bundle/release/*.aab
        retention-days: 30
